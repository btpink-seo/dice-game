version: '3'

services:
  proxy:
    image: nginx:1.15
    container_name: dice-map-proxy
    ports:
      - "80:80"
    volumes:
      - ./proxy/proxy.conf:/etc/nginx/nginx.conf.template
    environment:
      - WEB_PORT=${WEB_PORT}
      - API_PORT=${API_PORT}
      - SOCKET_PORT=${SOCKET_PORT}
      - DOMAIN=${DOMAIN}
    command: /bin/sh -c "envsubst '$$DOMAIN $$WEB_PORT $$API_PORT $$SOCKET_PORT'< /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && nginx -g 'daemon off;'"
    restart: "unless-stopped"
  client:
    build:
      context: ./client
      dockerfile: client-production.dockerfile
    container_name: dice-map-client
    volumes:
      - /client/node_modules
    restart: "unless-stopped"
  api:
    build:
      context: ./api
      dockerfile: api-production.dockerfile
      args:
        - API_PORT=${API_PORT}
        - SOCKET_PORT=${SOCKET_PORT}
    container_name: dice-map-api
    volumes:
      - /api/node_modules
    depends_on:
      - db
    restart: "unless-stopped"
  db:
    image: mongo:4.4.2
    container_name: dice-map-db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    expose:
      - "${MONGO_PORT}"
    volumes:
      - ./data/db:/data/db
    restart: always